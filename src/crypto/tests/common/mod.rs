#![allow(dead_code)] // So that rust-analyzer stops complaining that common functions are not used

use std::fs::File;
use std::io::Write;
use std::path::Path;

use crypto::crypt::{AEAD_KEY_SIZE, AEAD_NONCE_SIZE};
use rand::rngs::SmallRng;
use rand::{RngCore, SeedableRng};

// Expected hashes for files generated with SmallRng,
// seed = 0
// each file is 2^20 bytes long
pub const BLAKE3_EXPECTED_HASHES: [&str; 128] = [
    "4dad1cbc1d9c87a7cafad0b5f6ffd1dc1dfae3418059c380befd9dc04e8dd0b1",
    "05f025e8bdeb71d881b2aff6315fed458fb4231ed36431ef21ad59e6574ab8d8",
    "ea2168afd1d245b95f278b6921f8d7276cd23fb31c5729e4e8bef71bd7b0f5aa",
    "ea7937dcade577ce07e610b6b6b3b2240ee58a98837bdda71aa49e9cfab7ef53",
    "f7e22257dc85aa3aaace05f036e90bb0a97e915e21cd02b4802d98f1f65bf1b0",
    "9cc59ac36ce4b0277f827377bb5497d7fa7ab151fc88bf0f85889e99d5162897",
    "3651317641bff5fea30e467a7a92573464f75c212df19a10c09624ece21073d0",
    "4b8a472742ed1099eb5a043975aa246eec1ceb794e068e6ed3f45ac4549b6aeb",
    "6f4e72be1b5bd764df7363d168447a843d6fa56dc44867ed5867b6d36fdd4399",
    "360c2eacc31953d3f5163a16eece60efa8f29048b2bf6e33a65f04742ec8fb20",
    "1a271c95a1c9d16e636750405c27c8e69d74c4e7343b89674ec8a2c4a108785f",
    "e16cc0e88fc7f960777408e7247582413a87294b380fc8f696d4b8dd8bbdf6f4",
    "af250aa46de7326fcf15f3f26a40f5f90ab804612c8b7620fff6a8091989487c",
    "208a7b3461a344ba0f9fbc6335fa8cad82878a565dd107202f4271d4b1a2eb42",
    "fb1e719db2699341c78e34ca30466addec79c8c46eadc7491b81cac77f26f259",
    "2e1a7c666476d2f1a841e96aa9e38b8776117f990e7c7c825c5ca06f8039dfd0",
    "d8306a2b5fb4ae6fc4fbcc723f841e259cb7e095c29e85370e70eda7c4e4d572",
    "807f6db440795dc5755771107835498955c5384d2a5d107b01252d64d6ed5230",
    "05833bbea143d564bba1d53b1bd715c93fa195a1e697d2ac42bd5e83eae3430a",
    "9f102d57dfc53caf744a8a923d4c8cfc83c5a0958e082bb4595d0217bf163350",
    "35f4ee295b08d178c028229ddbedf26f1ca1699501897e56a758d36f4d210ce6",
    "2a2ef18c2f516c31ad7e1093a0ba2126603523c63faf098242037a3fa6ff6909",
    "099c6b8096fe9f790c748c4963280a31b3a2f842b6294cfd2a6e980f57b367d4",
    "8556f8b7fa864d607604e407cb47c68f1c84482967e2964f31595605ecc276e4",
    "d264ef160808da2df31d5fe5a7a04bc74485ae70fc6276d3d7a3998df8c9e2a2",
    "3c92240f7dd5c2bc8f8fa1a1a0f4a2602b0e3420413b5599d063acdd1ee2679e",
    "a7c3ffeb3df4314860670a0ef7ad123bc871c002fdd5746f77d96b4a19c1ed2c",
    "140054b5b57968c6ee501ade6a511ef0b8870c36d5dbcc1d035985be084820c2",
    "33fc408036d718d454d707f741bad2bad52cf9ee65d016f2bb100513a6eaa10e",
    "0c52550247988ca9022f49a8a1a727ef7dbe34b07869e987aa4322dbcb1f29f4",
    "990447a2066cae067ac98751d77dca9f115686b351fca1bc2eb0f704274cf694",
    "109f002d8cabf0af9cace6efcf52fc00d9a518af477695a34c5c45ba4239f815",
    "f2e4de71049bf90270a4805e86a72780fb83771fe525f8a1721d6d43187028dd",
    "8f7ca4542ac6a3d2b6f376eabe2a10925b6da8f828523f6bfea9126de5286ddd",
    "b5a50fa1b280f665482d52bd3960a48df7fd2b76f79dc372276e9d58743ab4fc",
    "b3df9cdc227fa67a23f66577130f6289ff1b0beb733f1038d07de40531a73bf5",
    "a8d49c84fece303613c75f508fab7d66554f6ec3dc880b085bef4976ca7e7689",
    "ce21e839ff8df2f5fcc85b0981a9e7bb0846b6b7346a81f6faad7c2dbb52d563",
    "41003002c557b72b7840d72c48e862d43cb3b0ab0da6053f931e002ce28bb3f5",
    "ed0256b17d8d4d19077b8760db51f73dd43746c6967c7c831c547047bbef2f3e",
    "0f9373f3f1b241f33bdc8d4e0a342eee0a96a4ff34258a700e32f49d670e4936",
    "8d5ffeb768c963bede19e095023a0c55c98ecb0fc42ba650ca64ff0fc604ac09",
    "9148d9b7c42592bb6e28e8b466e6848cc801cbae69e880cd3e8bea9144bfb0d7",
    "28b4f60681b951819f4ca5e311743105285a9e72080a76e636b2366f0133bd18",
    "e383dbc0620f9cb4b30f2f6917cc5dd838d448c9286f8f037d589ef3bf651a7c",
    "052fe044a5b4563652237f3f262c63ab6e91adcabfe332cb6722579ef581ca06",
    "ab6d7f82e6a0a962cf1798a365a390cc0b50cb6935653e5f4c42bd0b558f837c",
    "5da11a09799a37d831a30e6fbd2276c88fc4f7668bdbdb625c1fd45577b7b8d3",
    "65e69b783d98e1d9ef4dfe0755d8f3ac63a245ca3d3030e25b9282390eff5b04",
    "820722d857446f7dd79885cdd3856049333e048a42516961e1045c66fb8fbc80",
    "0a0c14d08fae07d4ed6a59dd3f41c446d227852bc22efe02df1dd5e7520cb531",
    "521d0d49a0a9a04cf850aa480647745e3f8dd60758f9be6e4d58b9132ce50f57",
    "fdcb8afb790bf3aab011b38cad001487d23dca551e021f36cba88990ff283619",
    "2c05420ebc6c50c3fcc7fbfb68967babbfee797cb8d7e1060880e161fb86cae8",
    "8bc98b04d975c9e73fb84b1ee87cfdb84fa3967aaac5b85a28c7dd08758d5865",
    "5d979ee6cde03fd41a6c6343f42c906446c9ccc609da6c9f661f62cc39fb454b",
    "968f93443554b75929e89e69578f577ba86c04b700de66a05655115972ea4af6",
    "bd1bd903aa4d67bb148cd4d6d110e14d19f8b716b0a5b0081d50c2fcee99ac42",
    "b1923d46d642c9c2f85a5d8847709e43dbf5b69c2895f456535ce48cb96b0808",
    "8ccaf5447e643f879a8d068a77d2e36e4e108b6ce178da1c03c2805a027a5b19",
    "25320aebeb4e87b886a77cd6a759076ef80d6e064b262c60b13f4ff7ceda9409",
    "4141f261f21ccc27c2ff610c41fe3a8d5387e501282d396a1bcf1ef7fea8bcba",
    "81fcbb766a70994ef6ae607ac61984fe98717ec64bbbf898d8b980193a120118",
    "9b49e7ef97154ba0c2fc1a50d984259c550a4912285550d2a3b05e2161b6a1e8",
    "9ea0685f81cca3f1f22e10a111978484b7e8e2c2ec77dd41355da02bbf0ba6a9",
    "2b9a7a9aafb5db327e2ace04ef6cf4d83063fc37aa2555531e3b04d5761740b7",
    "7d176d5af9f227ca617a89dd012293692b10adee6d061f790fc91768cfea9fb5",
    "0f1e5cb36dfe874baa93698da3c81a6ad755ed5c052da5c5fbd0e6199cb8a1ba",
    "8867ea3ece87e2f92fd8d7c0115c8055ee1ebfb0eaa5603d3949df6e0b2d2c07",
    "02f7e64cfede755b12df6e27b2738dd67e1f4fd3f460c8a6f411251a6a524b68",
    "28353a9e654e0c9f52b4eac28f2ad26663d73fdf8df1758d151f5be62a701b42",
    "34c93e2311bd7292de87d832b7b447cc7205518d2e1e28a3c590560b1923e968",
    "8df16c8809140035ca2fe8a4413d3dab068aea469a8cf214f378b4b7b745f9c6",
    "4d21ce17e7ebfe96b3de5059ed0f846515df3ebff6959afbbe4c38b6e5605240",
    "ce940c9ede6abcccbafe3b0e11b6a6489426ef1dacdddefe1f293bc24e0f0bb7",
    "f6db9b3d8a47fa1ac49812d469d39d59d64a7edf1d4ea97a5f5791f8443490b7",
    "30d6357d1625c9a7ae4222ef87a4b86a9bcf49182c3b1f6a3dab7b38a48fa3f1",
    "acff33b0261edc38ad7c5f5483216329ba07fd72a060a65ce2f8f4b71fee2584",
    "57e627adf35a76ce73796a887a885fe3027af75bb27ead1f757b795991e16981",
    "a250087b1fad390534a63d6baa4a64cfb16c08360ea6024aa483861d8c7edf0b",
    "371d54bc62729b4df983ba35a68e6e3c445c55e58893a7098b658a0411cd0c84",
    "e2c422c7ab01ab00dcb4c2435681a1000eb4a98bca6cc72930894197a5aa7b7c",
    "a7aca846fe0e64d39b4a2baa57fe1f5710a656fc0f6dd1b62b2a3cb2c11890de",
    "99a1b01453b6f2802e5b11a9c64507c3303287ed66f1ec2815cfda20e5449c26",
    "21fe967b034c4cf8928d9669e8345b29e5c73db1fd2cbcd27360626cb23f4196",
    "3c0f9bd8cab29c300a9682dccf0067a251148da3870d034449fdec556bd36b0d",
    "96ac68ba89e8bbe076f851f045933df6f09a40ab1b25acd0bbd385171b85e833",
    "e929d82d4dcecaf90a5251ba8952aeed9be57d131f2a71f2ade40debf40038cc",
    "f876ffedaf23bfa5aab921701d56fa67382c42de13ef84da52d178b28597cfc0",
    "5738f7393bad039626c5b7cbddc8c59307e91b239118974a62fa635b16a76d94",
    "3b277b4d5225fef44d9ba22b198142593ea069a26403b82b034650d666b1bd31",
    "21055b44f1dfa666fd6e24a82acef8cdd16bf0e2e4c379a58ba220caadd12e29",
    "98dff62479314a7ad319ed8ec8e00706e4ddc4b9b92b1799175d13e32b0912a0",
    "12b50f5f1b16cf1e1e072b2d5cb28a513139f125b6538a2a6c0e61fc139c1bba",
    "557887aaebfbc902695ac79613287929bca004ceb7c68b222ad821b78f6d3153",
    "009657573a8e09c9adcf2b98f60a016c0bf667d5bc442a1d18c3d53a1001da25",
    "8c6b43095839767246db744b2b0b5f61809a16acc62a097e614b2fa5e2d60db1",
    "7ef210bc40b645ba5cfd943d1aec54fcee6bf4274f30c82dba8987db28f1208d",
    "d2592e9dd6785652dd1c13e1ac50c934c652e066f9113bf45d48c397891c29f7",
    "c0645e9d15a38d8297b301c94967a863bc8cf33bee85ffb9c1af4de0ab969750",
    "30a63a35763e7a500aefea6c9da2c5c2ab001f41d0f652bdf47875a722ab2c4a",
    "b3f81f54bbbd789579095f6bfe48f10e28813886a14dadb9fd4451f1415e17c6",
    "1404b994e269c8186e5f9f828dc3a7e34a44fa7a21c02b2333ce45470a67260a",
    "26bb5ffe450e7a8c76481a1d20a01ba926386b3c144752e5c3b3e9de5235f6b4",
    "b59a838d47b3e086c2f185f3c3f21874ec1768d8fc13da3c8dcaa5c640042813",
    "d3739c5558b7086f652b2a8495de6fdfe6fdd98650fc885aa794a11fc73190e6",
    "40ef654b544be7fa729ab6274e943d101f279175c222157d1904af69232db992",
    "6b1f745485521062c92fac9acc8ce6289a4009bea9a5b23579c5f2b55c761efb",
    "d7e0e667b05e26b1d52b2873eb93810b46638d8998c758fe5b5f190b89a537c7",
    "8c2bcfa1bc7460db9912ccbdeb4b4ef037683d7e5d6b6441a30994020c293a84",
    "42f53903c4ab6125e17e076efde0ace56493dec397effb404d715c3252d85a4a",
    "3e1d8e0391e0cc807581f681e74d83db03da9c50834700457a2221429eda1294",
    "8146d377b9d09a09c844cce57b48319e33d923508c45a8fbe9e6c172b9799bd8",
    "ac82c6248489a8cb6c94c42279af4ad11ee58dd866541a012fa04a0afb5b3ae8",
    "15774cba816725bd5553f2c035fd627016356d6e30d60098b674f50524544d73",
    "9f4bb3f1d04c1c887c3e71f78dff19973001ec2ed35a68aeb025906bba5f9ac6",
    "6361677f101f40c323ae15a503d411e456b1d5aa46fc29ac93defa7e0e7b81cc",
    "6823767da4e5100e88790226e2d89a3f4ba799ab3016365957bc93bbae803b59",
    "7da414e6ac0a3009e5ba6ffa9c8c364c0c2051595caa4c97036e64925f0df4f3",
    "bd40d33eb331ec58a5aada9bff14b2bfae09908b6fc92891e1c1dc46c8057dc4",
    "f2d0336a620df186d7d1aa65a46fb5a9926aea05872ffad1fe35aa4259f7c79d",
    "e0c4e21f2f512180b64a6d5dfe8de2ca64be22e1abe558f6cbbcc5bfb3e95ab8",
    "3b922a3f23de6b9517591e4367c5dccc37e405968d59314feff6fff57128552e",
    "8c240cf22134e27b330e9b2740c8421486e473e86ce3c8acc7448d20e50ffaaf",
    "81d4edececd92324dde86fef663e7a0b1d49771fcbff3af6318f096f6d649091",
    "171b35b1de2d59630e5992f45bb8dd890780305ac41662f90b0fe53f85a4a26d",
    "f4c96e84002466367fa92d8942f251562055edef8e63b304f19cce0a3b51d1d4",
    "c540c4e4f172246ccd739e4b4ba052c11c5276e0e1ad010f80bbaa46ecdf8b20",
];

pub const BLAKE3_EMPTY_HASH: &str =
    "af1349b9f5f9a1a6a0404dea36dcc9499bcb25c9adc112b7cc9a93cae41f3262";

pub fn generate_random_plaintext_file_with_rng(
    rng: &mut SmallRng,
    file_path: impl AsRef<Path>,
    length: usize,
) {
    let mut plaintext_file = File::create(file_path).unwrap();
    let mut random_bytes = vec![0; length];

    rng.fill_bytes(&mut random_bytes);

    plaintext_file.write_all(&random_bytes).unwrap();
    plaintext_file.flush().unwrap();
}

pub fn generate_plaintext_with_content(file_path: impl AsRef<Path>, content: impl AsRef<str>) {
    let mut plaintext_file = File::create(file_path).unwrap();

    plaintext_file
        .write_all(content.as_ref().as_bytes())
        .unwrap();
    plaintext_file.flush().unwrap();
}

pub fn generate_seeded_key() -> ([u8; AEAD_KEY_SIZE], [u8; AEAD_NONCE_SIZE]) {
    let mut rng = SmallRng::seed_from_u64(0);
    let mut key = [0u8; AEAD_KEY_SIZE];
    let mut nonce = [0u8; AEAD_NONCE_SIZE];

    rng.fill_bytes(&mut key);
    rng.fill_bytes(&mut nonce);

    (key, nonce)
}
